<?php
/**
 * @file
 * Install file for newsmanager module
 */

/**
 * Implementation of hook_install
 */
function newsmanager_install() {
	// get the translation function relevant to our current localisation
	$t = get_t();

	$name = 'newsarticle';

	// define the content type as an array
	$newsarticle = array(
		'type' => $name,
		'name' => $t('Newsarticle'),
		'base' => 'node_content',
		'description' => $t('Content type to add Newsarticles'),
		'title_label' => $t('Newsarticle Title'),
		'status' => TRUE,
		'custom' => TRUE,
	);

	// set default values for anything not explicitly defined in the above array
	$content_type = node_type_set_defaults($newsarticle);

	// add the body field ot the content type
	node_add_body_field($content_type, 'Newsarticle content');

	// create the content type
	node_type_save($content_type);

	variable_set('node_options_' . $name, array('status'));
	// hide comments for this node
	variable_set('comment_' . $name, '0');

	// Create all the fields we are adding to our content type.
	foreach(_newsmanager_installed_fields() as $field) {
		field_create_field($field);
	}

	// Create all the instances for our fields.
	foreach(_newsmanager_installed_instances() as $instance) {
		$instance['entity_type'] = 'node';
		$instance['bundle'] = $newsarticle['type'];
		field_create_instance($instance);
	}

	taxonomy_vocabulary_save((object) array(
		'name' => $t('News Category'),
		'machine_name' => 'taxonomy_news_category',
		'description' => $t('Categories for Newsarticles.'),
		'i18n_mode' => 1,
	));
}

function _newsmanager_installed_fields() {
	$t = get_t();
	
	$fields = array(
		// date field
		'field_newsarticle_date' => array(
			'field_name' => 'field_newsarticle_date',
			'label' => $t('Date'),
			'cardinality' => 1,
			'type' => 'date',
		),
		'field_newsarticle_start_date' => array(
			'field_name' => 'field_newsarticle_start_date',
			'label' => $t('Start Date'),
			'cardinality' => 1,
			'type' => 'date',
		),
		'field_newsarticle_end_date' => array(
			'field_name' => 'field_newsarticle_end_date',
			'label' => $t('End Date'),
			'cardinality' => 1,
			'type' => 'date',
		),
		// image field
		'field_newsarticle_image' => array(
			'field_name' => 'field_newsarticle_image',
			'label' => $t('Image'),
			'cardinality' => 1,
			'type' => 'image',
			'settings' => array(
				'default_image' => 0,
				'uri_scheme' => 'public',
			),
		),
		// taxonomy reference auto complete field, referencing a vocabulary called 'newscategory'
		'field_newsarticle_category_ref' => array(
			'field_name' => 'field_newsarticle_category_ref',
			'label' => $t('News Category'),
			'cardinality' => FIELD_CARDINALITY_UNLIMITED,
			'type' => 'taxonomy_term_reference',
			'settings' => array(
				'allowed_values' => array(
					array(
						'vocabulary' => 'taxonomy_news_category',
						'parent' => 0,
					),
				),
			),
		),
		// taxonomy referenc auto complete field, referencing a vocabulary called 'tags'
		'field_newsarticle_tags_ref' => array(
			'field_name' => 'field_newsarticle_tags_ref',
			'label' => $t('Tags'),
			'cardinality' => FIELD_CARDINALITY_UNLIMITED,
			'type' => 'taxonomy_term_reference',
			'settings' => array(
				'allowed_values' => array(
					array(
						'vocabulary' => 'tags',
						'parent' => 0,
					),
				),
			),
		),
	);
	
	return $fields;
}

function _newsmanager_installed_instances() {
	$t = get_t();
	
	$instances = array(
		// instance of field_newsarticle_date
		'field_newsarticle_date' => array(
			'field_name' => 'field_newsarticle_date',
			'label' => $t('Date'),
			'cardinality' => 1,
			'widget' => array(
				'type' => 'date_popup',
				'settings' => array(
					'input_format' => 'd.m.Y H:i',
					'increment' => 1,
					'year_range' => '-0:+1',
				),
			),
		),
		// instance of field_newsarticle_start_date
		'field_newsarticle_start_date' => array(
			'field_name' => 'field_newsarticle_start_date',
			'label' => $t('Start Date'),
			'cardinality' => 1,
			'widget' => array(
				'type' => 'date_popup',
				'settings' => array(
					'input_format' => 'd.m.Y H:i',
					'increment' => 1,
					'year_range' => '-0:+1',
				),
			),
		),
		// instance of field_newsarticle_end_date
		'field_newsarticle_end_date' => array(
			'field_name' => 'field_newsarticle_end_date',
			'label' => $t('End Date'),
			'cardinality' => 1,
			'widget' => array(
				'type' => 'date_popup',
				'settings' => array(
					'input_format' => 'd.m.Y H:i',
					'increment' => 1,
					'year_range' => '-0:+10',
				),
			),
		),
		// instance of field_newsarticle_image
		'field_newsarticle_image' => array(
			'field_name' => 'field_newsarticle_image',
			'label' => $t('Image'),
			'cardinality' => 1,
			'type' => 'newsarticle_image',
			'settings' => array(
				'alt_field' => 1,
				'file_directory' => 'files',
				'file_extensions' => 'png gif jpg jpeg',
				'max_filesize' => '',
				'max_resolution' => '',
				'min_resolution' => '',
				'title_field' => 1,
				'user_register_form' => FALSE,
			),
			'widget' => array(
				'settings' => array(
					'preview_image_style' => 'thumbnail',
					'progress_indicator' => 'throbber',
				),
			),
			'display' => array(
				'default' => array(
					'label' => 'hidden',
					'type' => 'image',
					'settings' => array(
						'image_style' => 'large',
						'image_link' => '',
					),
				),
				'teaser' => array(
					'label' => 'hidden',
					'type' => 'image',
					'settings' => array(
						'image_style' => 'thumbnail',
						'image_link' => 'content',
					),
				),
				'overview' => array(
					'label' => 'hidden',
					'type' => 'image',
					'settings' => array(
						'image_style' => 'medium',
						'image_link' => 'content',
					),
				),
				'archive' => array(
					'label' => 'hidden',
					'type' => 'image',
					'settings' => array(
						'image_style' => 'medium',
						'image_link' => 'content',
					),
				),
			),
		),
		// instance of field_newsarticle_category_ref
		'field_newsarticle_category_ref' => array(
			'field_name' => 'field_newsarticle_category_ref',
			'label' => $t('News category'),
			'description' => $t('Enter a comma-separated list of words to describe your content.'),
			'cardinality' => FIELD_CARDINALITY_UNLIMITED,
			'widget' => array(
				'type' => 'taxonomy_autocomplete',
			),
		),
		// instance of field_newsarticle_tags_ref
		'field_newsarticle_tags_ref' => array(
			'field_name' => 'field_newsarticle_tags_ref',
			'label' => $t('Tags'),
			'description' => $t('Enter a comma-separated list of words to describe your content.'),
			'cardinality' => FIELD_CARDINALITY_UNLIMITED,
			'widget' => array(
				'type' => 'taxonomy_autocomplete',
			),
		),
	);
	
	return $instances;
}

/**
 * Implements hook_uninstall().
 */
function newsmanager_uninstall() {
	// machine name of the content type
	$name = 'newsarticle';

	// Gather all the content that might has been created while this module was enabled.
	$sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
	$result = db_query($sql, array(':type' => $name));
	$nids = array();

	foreach($result as $row) {
		$nids[] = $row->nid;
	}

	// Delete all the newsarticle nodes at once
	node_delete_multiple($nids);

	// remove persistant variables that control settings
	variable_del('node_options_' . $name);
	variable_del('comment_' . $name);

	// Loop over each of the fields defined by this module and delete them
	foreach(array_keys(_newsmanager_installed_fields()) as $field) {
		field_delete_field($field);
	}

	// Loop over any remaining field instances and delete them
	$instances = field_info_instances('node', $name);
	foreach($instances as $instance_name => $instance) {
		field_delete_instance($instance);
	}

	// Delete our content type
	node_type_delete($name);

	// machine name of the vocabulary
	$machine_name = 'taxonomy_news_category';

	// Get Taxonomy vid
	$sql = "SELECT vid FROM {taxonomy_vocabulary} v WHERE machine_name = :machine_name";
	$result = db_query($sql, array(':machine_name' => $machine_name));

	foreach($result as $row) {
		$vid = $row->vid;
	}

	// Delete vocabulary	
	taxonomy_vocabulary_delete($vid);

	// Purge all field information
	field_purge_batch(1000);
}
